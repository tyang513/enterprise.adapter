<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.0.xsd 
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/mvc 
          http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
          ">

	<bean id="sysConfig"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:sysConfig.properties</value>
				<value>file:///nfs/config/proxy/sysConfig.properties</value>
			</list>
		</property>
	</bean>

	<!-- configure file import -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:sysConfig.properties</value>
				<value>file:///nfs/config/proxy/sysConfig.properties</value>
			</list>
		</property>
	</bean>

	<!-- datasource defined -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${appdb.connection.driver_class}" />
		<property name="jdbcUrl" value="${appdb.connection.url}" />
		<property name="user" value="${appdb.connection.username}" />
		<property name="password" value="${appdb.connection.password}" />
		<property name="maxPoolSize" value="${c3p0.max_size}" />
		<property name="minPoolSize" value="${c3p0.min_size}" />
		<property name="initialPoolSize" value="${c3p0.initial_size}" />
		<property name="maxIdleTime" value="${c3p0.timeout}" />
		<property name="maxStatements" value="${c3p0.max_statements}" />
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" />
		<property name="acquireIncrement" value="${c3p0.acquire_increment}" />
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}" />
		<property name="idleConnectionTestPeriod" value="${c3p0.idle_test_period}" />
	</bean>

	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 配置别名用 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 当接口名与xml名相同时可省略此配置 -->
		<property name="mapperLocations" value="classpath:com/td/**/*Mapper.xml" />
	</bean>

	<!-- 由Spring来管理事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 扫描所有mapper,在本目录中新增的Mapper不再需要配置配置文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--basePackage指定要扫描的包，在此包之下的映射器都会被 搜索到。可指定多个包，包与包之间用逗号或分号分隔 -->
		<property name="basePackage"
			value="com.td.admin.mapper,com.td.common.dao;com.td.proxy.dao,com.td.proxy.dao.admin,com.td.proxy.dao.task,com.td.um.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
	</bean>


	<!-- 自动扫描service包完成注解装配 -->
	<context:component-scan base-package="com.td.admin.service" />
	<context:component-scan base-package="com.td.admin.dao" />
	<context:component-scan base-package="com.td.admin.quartz" />
	<context:component-scan base-package="com.td.common.util" />
	<context:component-scan base-package="com.td.common.service" />
	<context:component-scan base-package="com.td.proxy.service.*" /> 
	<context:component-scan base-package="com.td.um.service" /> 


	<!-- 当配为poxy-target-class="true"时，表示使用CGLib动态代理技术织入增强 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 支持上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<!-- 定时任务bean -->
	<bean id="jobEntrance" class="com.td.admin.quartz.entrance.JobEntrance"></bean>
	<!-- 缓存自动刷新bean -->
	<bean id="finRefreshCacheController" class="com.td.admin.ehcache.FinRefreshCacheController"></bean>
</beans>