package com.td.admin.mapper;

import java.util.List;
import java.util.Map;

import com.td.admin.entity.SysFtpServerConfig;

public interface SysFtpServerConfigMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FtpServerConfig
     *
     * @mbggenerated Thu Jun 20 17:32:28 CST 2013
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FtpServerConfig
     *
     * @mbggenerated Thu Jun 20 17:32:28 CST 2013
     */
    int insert(SysFtpServerConfig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FtpServerConfig
     *
     * @mbggenerated Thu Jun 20 17:32:28 CST 2013
     */
    int insertSelective(SysFtpServerConfig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FtpServerConfig
     *
     * @mbggenerated Thu Jun 20 17:32:28 CST 2013
     */
    SysFtpServerConfig selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FtpServerConfig
     *
     * @mbggenerated Thu Jun 20 17:32:28 CST 2013
     */
    int updateByPrimaryKeySelective(SysFtpServerConfig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FtpServerConfig
     *
     * @mbggenerated Thu Jun 20 17:32:28 CST 2013
     */
    int updateByPrimaryKey(SysFtpServerConfig record);
    
    /**
     * 查询所有的ftp客户端配置
     * @param record
     * @return
     */
    List<SysFtpServerConfig> getPagingList(SysFtpServerConfig record);
    
    /**
     * 总数
     * @param record
     * @return
     */
    Long getPagingCount(SysFtpServerConfig record);
    
    /**
     * 获取ftp服务配置
     * @param servername
     * @return
     */
    SysFtpServerConfig getFtpServerConfig(String servername);
    
    
    /**
     * 获取所有ftp服务配置，无密码字段
     * @param condMap
     * @return
     */
    List<SysFtpServerConfig> getFtpServerConfigList(String servername);
	
	
	/**
	 * 用来判断密码是否正确
	 * @param condMap（原密码，序列号）
	 * @return
	 */
	int getFtpServerPassword(Map<String, Object> condMap);
	
	SysFtpServerConfig getFtpServerConfigByMap(Map<String, Object> condMap);
	
	List<SysFtpServerConfig> getFtpServerListConfigByMap(Map<String, Object> condMap);
    
}