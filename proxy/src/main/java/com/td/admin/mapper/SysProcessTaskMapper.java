package com.td.admin.mapper;

import java.util.List;
import java.util.Map;

import com.td.admin.entity.SysProcessTask;

public interface SysProcessTaskMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIN_INTEGRAL_MARKET_TASK
     *
     * @mbggenerated Fri Aug 09 11:00:21 CST 2013
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIN_INTEGRAL_MARKET_TASK
     *
     * @mbggenerated Fri Aug 09 11:00:21 CST 2013
     */
    int insert(SysProcessTask record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIN_INTEGRAL_MARKET_TASK
     *
     * @mbggenerated Fri Aug 09 11:00:21 CST 2013
     */
    int insertSelective(SysProcessTask record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIN_INTEGRAL_MARKET_TASK
     *
     * @mbggenerated Fri Aug 09 11:00:21 CST 2013
     */
    SysProcessTask selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIN_INTEGRAL_MARKET_TASK
     *
     * @mbggenerated Fri Aug 09 11:00:21 CST 2013
     */
    int updateByPrimaryKeySelective(SysProcessTask record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIN_INTEGRAL_MARKET_TASK
     *
     * @mbggenerated Fri Aug 09 11:00:21 CST 2013
     */
    int updateByPrimaryKey(SysProcessTask record);
    
    SysProcessTask getFinTask(String taskcode);
    
    
    public Long queryTaskTotalCount(SysProcessTask record);
    
    
    List<SysProcessTask> queryTasks(SysProcessTask record);
    List<SysProcessTask> selectTasks(SysProcessTask record);
    void stopTasks(SysProcessTask record);
    
	List<SysProcessTask> findByOvertime();
	
    Long queryMyCompleteFinTaskCount(Map<String,Object> condition);
    
    List<Map<String,Object>> queryMyCompleteFinTask(Map<String,Object> condition);

    
    List<Map<String,Object>> queryMyFinTask(SysProcessTask finTask);
    
    Long queryMyFinTaskCount(SysProcessTask finTask);
    
    /**
     * 校验中的任务
     * @param finTask
     * @return
     */
    Long queryMyVerifyingTaskCount(SysProcessTask finTask);
    
    /**
     * 校验中的任务
     * @param finTask
     * @return
     */
    List<Map<String,Object>> queryMyVerifyingTask(SysProcessTask finTask);

    List<SysProcessTask> queryTaskByTaskCode(SysProcessTask finTask);

    /**
     * 根据processinstanceid和taskcode获取任务
     * @param finTask
     * @return
     */
    List<SysProcessTask> getTasksByProcessInstanceIdAndTaskCode(SysProcessTask finTask);

	void updateLastReminderTime(Long taskConfigId);


}